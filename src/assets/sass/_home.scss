// Small devices
.home {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100%;
    margin: 0;
  
    img {
      height: 250px;
      width: auto;
      margin-right: 50px;
    }
  
    span {
      font-size: 2em;
      color: $secondary;
      font-family: $font-pacifico;
    }
  
    p {
      color: $success;
      margin: 0;
    }
  
    // Multiple shadows, one on the outside, another on the inside
    .offset {
      box-shadow: 0.3em 0.3em 0 0 var(--color), inset 0.3em 0.3em 0 0 var(--color);
  
      &:hover,
      &:focus {
        box-shadow: 0 0 0 0 var(--hover), inset 6em 3.5em 0 0 var(--hover);
      }
    }
  
    $colors: (
      offset: $secondary,
    );
  
    // Sass variables compile to a static string; CSS variables are dynamic and inherited
    // Loop through the map and set CSS custom properties using Sass variables
    @each $button, $color in $colors {
      .#{$button} {
        --color: #{$color};
        --hover: #{adjust-hue($color, 0deg)};
      }
    }
  
    button {
      color: var(--color);
      transition: 0.25s;
  
      &:hover,
      &:focus {
        border-color: var(--hover);
        color: $primary;
      }
    }
  
    // Basic button styles
    button {
      background: none;
      border: 2px solid;
      font: inherit;
      line-height: 1;
      margin: 0.5em;
      padding: .7em 1.7em;
    }
  }
  


// Medium devices (tablets, 768px and up)
@include media-breakpoint-up(md) {
  .home {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    min-height: 100%;
    margin: 0;

    img {
      height: 250px;
      width: auto;
      margin-right: 50px;
    }

    span {
      font-size: 2em;
      color: $secondary;
      font-family: $font-pacifico;
    }

    p {
      color: $success;
      margin: 0;
    }

    // Multiple shadows, one on the outside, another on the inside
    .offset {
      box-shadow: 0.3em 0.3em 0 0 var(--color),
        inset 0.3em 0.3em 0 0 var(--color);

      &:hover,
      &:focus {
        box-shadow: 0 0 0 0 var(--hover), inset 6em 3.5em 0 0 var(--hover);
      }
    }

    $colors: (
      offset: $secondary,
    );

    // Sass variables compile to a static string; CSS variables are dynamic and inherited
    // Loop through the map and set CSS custom properties using Sass variables
    @each $button, $color in $colors {
      .#{$button} {
        --color: #{$color};
        --hover: #{adjust-hue($color, 0deg)};
      }
    }

    button {
      color: var(--color);
      transition: 0.25s;

      &:hover,
      &:focus {
        border-color: var(--hover);
        color: $primary;
      }
    }

    // Basic button styles
    button {
      background: none;
      border: 2px solid;
      font: inherit;
      line-height: 1;
      margin: 0.5em;
      padding: 0.7em 1.7em;
    }
  }
}