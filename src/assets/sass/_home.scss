// Small devices
.home {

  height: 100%;

  .container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
  }

 .photo-description {
   display: flex;
   flex-direction: column;
   align-items: center;
   justify-content: center;
 }

  .main-profile-picture {
    display: flex;
    justify-content: center;
    height: 200px;
    width: auto;
    margin-bottom: 50px;
  }

  .name {
    font-size: 2em;
    color: $secondary;
    font-family: $font-pacifico;
  }

  p {
    color: $success;
    margin: 0;
  }

  // Multiple shadows, one on the outside, another on the inside
  .offset {
    box-shadow: 0.3em 0.3em 0 0 var(--color), inset 0.3em 0.3em 0 0 var(--color);

    &:hover,
    &:focus {
      box-shadow: 0 0 0 0 var(--hover), inset 6em 3.5em 0 0 var(--hover);
    }
  }

  $colors: (
    offset: $secondary,
  );

  // Sass variables compile to a static string; CSS variables are dynamic and inherited
  // Loop through the map and set CSS custom properties using Sass variables
  @each $button, $color in $colors {
    .#{$button} {
      --color: #{$color};
      --hover: #{adjust-hue($color, 0deg)};
    }
  }

  .btn-cv {
    color: var(--color);
    transition: 0.25s;

    &:hover,
    &:focus {
      border-color: var(--hover);
      color: $primary;
    }
  }

  // Basic button styles
  .btn-cv {
    background: none;
    border: 2px solid;
    font: inherit;
    line-height: 1;
    margin: 0.5em;
    padding: 0.7em 1.7em;
  }
}

// Medium devices (tablets, 992px and up)
@include media-breakpoint-up(lg) {
  .home {
    height: 100%;

    .container {
      display: flex;
      flex-direction: row;
      justify-content: center;
      height: 100%;
    }

    .photo-description {
      display: flex;
      flex-direction: column;
      align-items: flex-start;
    }

    .main-profile-picture {
      display: flex;
      justify-content: center;
      height: 250px;
      width: auto;
      margin-right: 30px;
      margin-bottom: 0;
    }

    span {
      font-size: 2em;
      color: $secondary;
      font-family: $font-pacifico;
    }

    p {
      color: $success;
      margin: 0;
    }

    // Multiple shadows, one on the outside, another on the inside
    .offset {
      box-shadow: 0.3em 0.3em 0 0 var(--color),
        inset 0.3em 0.3em 0 0 var(--color);

      &:hover,
      &:focus {
        box-shadow: 0 0 0 0 var(--hover), inset 6em 3.5em 0 0 var(--hover);
      }
    }

    $colors: (
      offset: $secondary,
    );

    // Sass variables compile to a static string; CSS variables are dynamic and inherited
    // Loop through the map and set CSS custom properties using Sass variables
    @each $button, $color in $colors {
      .#{$button} {
        --color: #{$color};
        --hover: #{adjust-hue($color, 0deg)};
      }
    }

    .btn-cv {
      color: var(--color);
      transition: 0.25s;

      &:hover,
      &:focus {
        border-color: var(--hover);
        color: $primary;
      }
    }

    // Basic button styles
    .btn-cv {
      background: none;
      border: 2px solid;
      font: inherit;
      line-height: 1;
      margin: 0.5em;
      padding: 0.7em 1.7em;
    }
  }
}
